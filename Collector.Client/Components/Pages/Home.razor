@page "/"
@using Collector.Client.Components.Pages.Register;
@using Collector.Client.Entities
@using Newtonsoft.Json
@inject Collector.Client.SessionHelpers.CookieService cookies;
@inject NavigationManager Navigation;

<BaseScreen CustomStyles="background-color:#25251D">
    
    <div Class="secondary-container">
        <!-- Columna izquierda (Bienvenida) -->
        <div Class="left-container">
            <MudText Typo="Typo.h4" Class="welcome-text">
                BIENVENIDO <br />A<br /> COLLECTORD
            </MudText>

            <MudText Typo="Typo.body1" Class="description-text">
                CollectoRD es una iniciativa que surge para colaborar con el medio ambiente, esta
                iniciativa permite que puedas conectar con autoridades o personas para limpiar el futuro del país.
            </MudText>

            <MudText Typo="Typo.body1" Class="register-text">
                ¿No tienes una cuenta? <br />
                <span class="font-bold">¡Vamos regístrate!</span>
            </MudText>
            <MudButtonGroup Variant="Variant.Filled">
                <MudButton Class="register-btn" Style="background-color:#7B885B; color:white" Href="/RegisterUser">
                    Institución
                </MudButton>
                <MudButton Class="register-btn" Style="background-color:#7B885B; color:white" Href="/RegisterUser">
                    Persona
                </MudButton>
            </MudButtonGroup>
        </div>

        <!-- Columna derecha (Formulario de inicio de sesión) -->
        <div Class="right-container">
            <MudText Typo="Typo.h4" Class="login-text fw-bold ms-4 mb-2">Iniciar Sesión</MudText>
            <EditForm Model="@loginModel" OnValidSubmit="() => HandleLogin(loginModel)">
            <DataAnnotationsValidator/>
            @*Inputs for the user *@
                
                <MudTextField @bind-Value="loginModel.Email" Variant="Variant.Outlined" 
                              Label="Correo electrónico" Type="email" Class="custom-label w-full mb-3" />
                <ValidationMessage For="(() => loginModel.Email)"/>

                <MudTextField @bind-Value="loginModel.Password" Variant="Variant.Outlined"
                              Label="Contraseña" Type="password" Class="custom-label w-full" />
                <ValidationMessage For="(() => loginModel.Password)"/>

                <MudText Class="ms-15 mt-3">
                    <NavLink href="ForgotPassword" style="color:#4C673C; font-weight:bolder" class="forgetPasswordText">¿Olvidaste tu contraseña?</NavLink>
                </MudText>

                <MudButton Variant="Variant.Filled" 
                Style="background-color:#7B885B; margin-top:10px; 
                        color:white; width:100%">
                    Iniciar Sesion
                </MudButton>

            </EditForm>
        </div>
    </div>
</BaseScreen>

<style>

    .secondary-container {
        display: flex;
        width: 85%;
        max-width: 640px;
        border-radius: 20px;
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .left-container {
        width: 50%;
        padding: 32px;
        background-color: #D9D9D9F2;
        border-right: 2px solid #cfcfcf;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .right-container {
        width: 50%;
        padding: 32px;
        align-content: center;
        background-color: #D9D9D9F2;
        border-left: 3px solid #7B885B
    }

    .welcome-text {
        font-size: 1.75rem;
        font-weight: bolder;
        margin-bottom: 16px;
        text-align: center;
    }

    .description-text {
        color: #4a4a4a;
        text-align: center;
        margin-bottom: 24px;
    }

    login-input {
        background-color: #FFFCFC91;
        border-radius:20px;
    }

    .register-text {
        font-weight: bold;
        color: #4a4a4a;
        text-align: center;
        margin-bottom: 19px;
    }

    .mud-button.register-btn {
        background-color: #7B885B;
        color: black;
        font-weight: 600;
        padding: 8px 16px;
        border-radius: 8px;
        border: 3px solid #767572;
        cursor: pointer;
    }

    .login-btn {
        margin-top: 20px;
        background-color: #7B885B;
        font-weight: 600;
        width: 100%;
        padding: 12px 0;
        color: white;
        border-radius: 8px;
    }

    .custom-label .mud-input-label {
        background-color: #D0D0CF; /* Cambia este color al que tienes en el contenedor /
        color:  black; / Color del texto del label, ajusta según prefieras */
        padding: 0 4px;
        font-weight:bold;
    }
</style>


@code {
    private LoginViewModel loginModel = new();

    public async Task<Response<SessionViewModel>> HandleLogin(LoginViewModel loginModel)
    {
        var url = new Uri("http://localhost:5004/api/Authentication/login");
        Response<SessionViewModel> session = new();

        using(var client = new HttpClient())
        {
            using(var response = await client.PostAsJsonAsync(url,loginModel))
            {
                if (response.IsSuccessStatusCode)
                {
                    var content = await response.Content.ReadAsStringAsync();
                    session = JsonConvert.DeserializeObject<Response<SessionViewModel>>(content);
                    cookies.SetCookies("session", session.value);
                    return session;
                }
                else
                {
                    return session;   
                }
            }
        }
    }

    public void Navigator()
    {
        
    }
}
