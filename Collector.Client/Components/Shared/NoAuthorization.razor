@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation

<main class="centered-container">
    <div class="secundary-container">
        <img class="img-collector" src="/ImagenCollector.jpg" />
        <h5 class="title">
            No estás autorizado para acceder a esta página.
        </h5>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="GoToLastPage">Volver</MudButton>
    </div>
</main>

<style>
    .centered-container {
        display: flex;
        background-color: #25251D;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        text-align: center;
    }

    .title {
        color: gray;
    }

    .secundary-container {
        width: 48%;
        padding: 10px;
        background-color: #BDBABAF2;
        border-radius: 10px;
        transition: 0.3s;
        box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
    }

    .img-collector {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        margin: 20px 0;
        object-fit: cover;
    }

    main {
        margin: 0;
    }
</style>

@code {
    private string LastVisitedUrl { get; set; } = "/";

    protected override async Task OnInitializedAsync()
    {
        LastVisitedUrl = await JSRuntime.InvokeAsync<string>("localStorage.getItem", "lastVisitedUrl") ?? "/";
    }

    private async Task GoToLastPage()
    {
        var currentUrl = Navigation.Uri.Replace(Navigation.BaseUri, "");
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "lastVisitedUrl", currentUrl);

        Navigation.NavigateTo(LastVisitedUrl);
    }
}