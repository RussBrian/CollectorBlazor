@page "/User/Reports"
@using Collector.Client.Dtos
@using Collector.Client.Dtos.Reports
@using Collector.Client.Services
@using Collector.Client.Services.Reports
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims
@using System.Text.Json
@inject IReportsService reportService;
@inject NavigationManager navManager;
@inject HttpClient _httpClient;
@inject Collector.Client.SessionHelpers.SessionManager _sessionManager;

@{
    <script src="https://kit.fontawesome.com/7302c44b99.js" crossorigin="anonymous"></script>
}

<div class="first-container">
    @if (!isDataLoaded)
    {
        <!-- Mostrar un estado de carga mientras se obtienen los datos -->
        <div class="loading-container">
            <div class="spinner-border" role="status">
            </div>
            <h4 style="color:white; margin-top:8px;">Cargando datos...</h4>
        </div>
    }
    else
    {
        @if (reportDtos.Count() != 0)
        {
            <div class="d-flex flex-row">
                <h2 class="title">REPORTES</h2>
                <button @onclick="NavigateToCreateReports"
                        class="btn-new-report btn mt-3">
                    Nuevo Reporte
                </button>
            </div>

            <main class="secundary-container">
                @foreach (var reports in reportDtos)
                {
                    <div class="card card-content">
                        <img class="card-img-top" style="width:100%; height:250px;"
                             src="@(reports.ImageUrls.Any() ? reports.ImageUrls[0]
                         : "https://www.shutterstock.com/image-photo/empty-streets-sidewalks-5th-avenue-600nw-2459090389.jpg")" />
                        <div class="card-body">
                            <div class="card-body-container">
                                <h6>@reports.Title</h6>

                                <div style=" width:90%; border-bottom: 2px solid #515B3B; margin-bottom:8px;"></div>

                                <p>@reports.Description</p>
                            </div>
                            <div class="date-container">
                                <p><i class="fa-solid fa-circle fa-flip-both" style="color: #de940b;"></i> @reports.Status</p>
                                <p>@reports.Date</p>
                            </div>
                        </div>
                        <div class="btn-container">
                            <button @onclick="() => GetReportById(reports.Id)"
                                    class="btn btn-details">
                                Ver más detalles
                                <i class="fa-solid fa-arrow-right fa-lg" style="color: #f0f0f0;"></i>
                            </button>
                        </div>
                    </div>
                }
            </main>

            <div class="m-3">
            </div>

        }
        else
        {
            <h2 class="title-noreports">REPORTES</h2>
            <div class="container-no-reports col-6 offset-12 mt-3">
                <div class="text-center">
                    <i class="fa-solid fa-clipboard fa-2xl" style="color: #ededed;"></i>
                    <h5 class="card-title mt-2 text-secondary">No se han encontrado reportes registrados ¿desea crear uno?</h5>
                    <a href="/User/Create/Reports" class="btn-new-report-no-report btn mt-2">Nuevo Reporte</a>
                </div>
            </div>
        }
    }
</div>

<style>

    .title {
        margin-bottom: 20px;
    }

    .loading-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
    }

    .spinner-border {
        color: #7B885B;
        font-weight: bold;
        width: 3rem;
        height: 3rem;
    }
</style>

@code {
    private List<ResReportsDto> reportDtos { get; set; } = new();
    private bool isDataLoaded = false;
    private int PaginaActual = 1;
    private int PaginasTotales;

    public void NavigateToCreateReports()
    {
        navManager.NavigateTo("/Create/Reports", forceLoad: true);
    }

    protected async override Task OnInitializedAsync()
    {
        await GetUserReports();
        isDataLoaded = true;
    }

    private void GetReportById(int Id) => navManager.NavigateTo($"/Reports/Details/{Id}");

    private async Task GetUserReports(string UserId = "9zeirWQJnldZ2qizLbalnxjxpQh2")
    {
        reportDtos = await reportService.GetAllReportsByUserId(UserId, new PaginationDto());
    }
}
