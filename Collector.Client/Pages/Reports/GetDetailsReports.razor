@page "/Reports/Details/{Id:int}"
@using Collector.Client.Dtos.Reports
@using Collector.Client.Services.Reports
@inject IReportsService _reportService
@inject NavigationManager navManager

<div class="container">
    <div class="card-custom">
        <div class="card-header-custom">
            <h2>@reportDetails.Title</h2>
            <p class="text-muted">@reportDetails.Date</p>
        </div>

        @if (reportDetails.ImageUrls.Any())
        {
            <div id="carouselExampleControls" class="carousel slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @foreach (var (url, index) in reportDetails.ImageUrls.Select((value, i) => (value, i)))
                    {
                        <div class="carousel-item @(index == 0 ? "active" : "")">
                            <img src="@url" class="d-block w-100 carousel-img" alt="Image @index" />
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleControls" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        }

        <div class="card-body-custom">
            <div class="section">
                <h5>Descripción</h5>
                <p>@reportDetails.Description</p>
            </div>

            <div class="section">
                <h5>Ubicación</h5>
                <p>Lat: @reportDetails.Latitude, Lng: @reportDetails.Longitude</p>
            </div>
        </div>

        <div class="card-footer-custom">
            <button class="btn btn-secondary" @onclick="NavigateBack">Volver</button>
        </div>
    </div>
</div>

<style>
    .container {
        max-width: 600px;
        margin: 20px auto;
        color: black;
        background-color: #25251D;
    }

    .card-custom {
        background-color: #BDBABAF2;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.4);
    }

    .card-header-custom {
        background-color: #BDBABAF2;
        padding: 20px;
        border-bottom: 1px solid #444;
        text-align: center;
    }

        .card-header-custom h2 {
            margin: 0;
            font-size: 1.8rem;
        }

    .card-body-custom {
        padding: 20px;
    }

        .card-body-custom .section {
            margin-bottom: 15px;
        }

        .card-body-custom h5 {
            margin: 0 0 10px;
            font-size: 1.2rem;
            color: #e3e3e3;
        }

    .card-footer-custom {
        background-color: #3b3b3b;
        padding: 10px;
        text-align: right;
    }

    .btn-secondary {
        background-color: #555;
        color: #fff;
        border: none;
        padding: 8px 16px;
        border-radius: 5px;
        cursor: pointer;
    }

        .btn-secondary:hover {
            background-color: #777;
        }

    .carousel-img {
        height: 300px;
        object-fit: cover;
        border-radius: 5px;
    }
</style>

@code {
    [Parameter] public int Id { get; set; }
    private ResReportsGetById reportDetails = new();

    protected async override Task OnInitializedAsync()
    {
        var report = await _reportService.GetByIdReports(Id);
        reportDetails = report.Value[0] ?? new ResReportsGetById();
        await base.OnInitializedAsync();
    }

    private void NavigateBack()
    {
        navManager.NavigateTo("/User/Reports");
    }
}
