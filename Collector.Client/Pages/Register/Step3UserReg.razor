@using Microsoft.AspNetCore.Components.Forms
@using Collector.Client.Dtos.Login

<div class="step3-container">
    <div class="custom-image-title">Foto de Perfil</div>

    <InputFile OnChange="OnFileSelected"
               class="input-file-rounded"
               style="opacity:0; position:absolute; border-radius: 50%;" />

    <div>
        <MudPaper Height="300px"
                  Outlined="true"
                  Class="@_dragClass">
            @if (!string.IsNullOrEmpty(ImagePreview))
            {
            <div class="preview-container d-flex align-center justify-center" style="height: 100%; text-align: center;">
                <img src="@ImagePreview" alt="Vista previa" style="max-width: 100%; max-height: 100%; border-radius: 10px;" />
            </div>
            }
            else
            {
            <MudText Typo="Typo.h6" Align="Align.Center">Arrastra y suelta tu imagen aquí o haz clic para seleccionarla</MudText>
            }
        </MudPaper>
    </div>

    <p class="custom-message-image">
        Puedes arrastrar tu imagen al área o seleccionarla haciendo clic.
    </p>
</div>

@code {
[Parameter]
public ReqUserDto reqUserDto { get; set; }

[Parameter]
public bool IsInstitution { get; set; }

private string ImagePreview { get; set; } = string.Empty;
private string _dragClass = "relative rounded-lg border-2 border-dashed pa-4 mt-4 mud-width-full mud-height-full";

#region Métodos

private async Task OnFileSelected(InputFileChangeEventArgs e)
{
    var file = e.File;
    if (file != null)
    {
        using var stream = file.OpenReadStream(maxAllowedSize: 1024 * 1024 * 5);
        using var memoryStream = new MemoryStream();
        await stream.CopyToAsync(memoryStream);
        var base64 = Convert.ToBase64String(memoryStream.ToArray());
        ImagePreview = $"data:{file.ContentType};base64,{base64}";
        reqUserDto.Image = ImagePreview;
    }
}

#endregion
}

<style>
    .input-file-rounded {
        border-radius: 50%;
        overflow: hidden;
    }


</style>
