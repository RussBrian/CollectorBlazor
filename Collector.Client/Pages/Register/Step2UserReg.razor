@using Collector.Client.Dtos.Login
@using Collector.Client.Helpers
@using Collector.Client.Validations
@using MudBlazor
@inherits ComponentBase;

<div class="step2-container">
    <MudForm Model="reqUserDto">
        <label class="custom-label">Teléfono</label>
        <MudTextField @bind-Value="@reqUserDto.Phone"
                      AutoFocus="true"
                      Immediate="true"
                      For="@(() => reqUserDto.Phone)"
                      Variant="Variant.Outlined"
                      Style="color:white;" />

        <div class="d-flex justify-content-between mt-5">
            <label class="custom-label">Contraseña</label>
            <MudTooltip Style="background-color:darkgray; color:black;" Arrow="true" Placement="Placement.Right" Delay="400">
                <ChildContent>
                    <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" Size="Size.Small" Style="color:darkgray" />
                </ChildContent>
                <TooltipContent>
                    <MudText Style="font-weight:normal; font-size:small;">La <strong>contraseña</strong> debe contener al menos:</MudText>
                    <MudText Style="font-weight:normal; font-size:small;">
                        1 letra, 8 caracteres, 1 número y
                    </MudText>
                    <MudText Style="font-weight:normal; font-size:small;">
                        1 carácter
                        especial (“@@”,”!”,”#”,”.”)
                    </MudText>
                </TooltipContent>
            </MudTooltip>
        </div>
        <MudTextField @bind-Value="reqUserDto.Password"
                      Immediate="true"
                      For="@(() => reqUserDto.Password)"
                      Variant="Variant.Outlined"
                      InputType="@PasswordInput"
                      Adornment="Adornment.End"
                      AdornmentIcon="@PasswordInputIcon"
                      OnAdornmentClick="TogglePasswordVisibility"
                      Style="color:white;" />

        <div class="d-flex justify-content-between mt-5">
            <label class="custom-label">Confirmar Contraseña</label>
            <MudTooltip Style="background-color:darkgray; color:black;" Arrow="true" Placement="Placement.Right" Delay="400">
                <ChildContent>
                    <MudIcon Icon="@Icons.Material.Filled.ErrorOutline" Size="Size.Small" Style="color:darkgray" />
                </ChildContent>
                <TooltipContent>
                    <MudText Style="font-weight:bold; font-size:small">Las contraseñas deben coincidir.</MudText>
                </TooltipContent>
            </MudTooltip>
        </div>
        <MudTextField @bind-Value="reqUserDto.ConfirmPassword"
                      Immediate="true"
                      For="@(() => reqUserDto.ConfirmPassword)"
                      Variant="Variant.Outlined"
                      InputType="InputType.Password"
                      Style="color:white;" />
        <p class="custom-message-required">El campo es requerido.</p>
    </MudForm>
</div>

<style>
    .custom-label {
        font-weight: 700;
        color: #BDBABA;
    }

        .custom-label::before {
            content: '*';
            color: #ef4444;
            margin-right: 0.25rem;
        }

    .custom-message-required {
        color: #7B885B;
        font-weight: bold;
        font-size: 0.875rem;
        margin-top: 1rem;
    }

        .custom-message-required::before {
            content: '*';
            color: #ef4444;
            margin-right: 0.25rem;
        }
</style>

@code {
    [Parameter]
    public ReqUserDto reqUserDto { get; set; }

    #region VisibilityMethod
    private InputType PasswordInput = InputType.Password;
    private string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    private void TogglePasswordVisibility()
    {
        bool isPasswordVisible = PasswordInput == InputType.Password;
        PasswordInput = isPasswordVisible ? InputType.Text : InputType.Password;
        PasswordInputIcon = isPasswordVisible ? Icons.Material.Filled.Visibility : Icons.Material.Filled.VisibilityOff;
    }
    #endregion
}
