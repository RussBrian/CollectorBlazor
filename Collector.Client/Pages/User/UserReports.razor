@page "/User/Reports"
@using Collector.Client.Dtos
@using Collector.Client.Dtos.Reports
@using Collector.Client.Services
@using Collector.Client.Services.Reports
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims
@inject IReportsService reportService;
@inject NavigationManager navManager;
@inject Collector.Client.SessionHelpers.SessionManager _sessionManager;

@{
    <script src="https://kit.fontawesome.com/7302c44b99.js" crossorigin="anonymous"></script>
}

<div class="first-container">

    @if (isDataLoaded)
    {
        <div class="d-flex flex-row">
            <h2 class="title">REPORTES</h2>
            <button @onclick="NavigateToCreateReports"
                    class="btn-new-report btn mt-3">
                Nuevo Reporte
            </button>
        </div>

        <main class="secundary-container">
            @foreach (var reports in reportDtos)
            {
                <div class="card card-content">

                        <img class="card-img-top" style="width:100%; height:250px;"  src="@(reports.ImageUrls.Any() ? reports.ImageUrls[0] 
                        : "https://encrypted-tbn1.gstatic.com/images?q=tbn:ANd9GcQ1sCkwCuiG0ibXP5xmF61qsQQ80Z0PE4MC7jjQw1PyG1oAKF-QFEKwoBnc7_aDBudFVJftO0zACm6EVpjIrnQYjRz0aHVJosmehRm5Ow")"/>
                    <div class="card-body">
                        <div class="card-body-container">
                            <h6>@reports.Title</h6>
                            <p>@reports.Description</p>
                        </div>
                        <div class="date-container">
                            <p>@reports.Status</p>
                            <p>@reports.Date</p>
                        </div>
                        <div class="btn-container">
                            <a href="#" class="btn btn-details">
                                Ver más detalles
                                <svg xmlns="http://www.w3.org/2000/svg" height="24" viewBox="0 0 24 24" width="24">
                                    <path d="M0 0h24v24H0z" fill="none" />
                                    <path d="M16.01 11H4v2h12.01v3L20 12l-3.99-4z" fill="white" />
                                </svg>
                            </a>
                        </div>
                    </div>
                </div>
            }
        </main>


        <div class="pagination-container m-4">
            <MudPagination Class="custom-pagination" Size="Size.Large" Rectangular="true" Variant="Variant.Filled" Count="6" />
        </div>
    }
    else
    {
        <h2 class="title">REPORTES</h2>
        <div class="container-no-reports col-6 offset-12 mt-3">
            <div class="text-center">
                <i class="fa-solid fa-clipboard fa-2xl" style="color: #ededed;"></i>
                <h5 class="card-title mt-2 text-secondary">No se han encontrado reportes registrados ¿desea crear uno?</h5>
                <a href="/User/Create/Reports" class="btn-new-report btn mt-2">Nuevo Reporte</a>
            </div>
        </div>
    }
</div>

<style>
    .custom-pagination .mud-pagination-item {
        color: white;
    }
</style>

@code {
    private List<ResReportsDto> reportDtos { get; set; } = new();
    private PaginationDto pagination { set; get; } = new();
    private bool isDataLoaded = false;

    public void NavigateToCreateReports()
    {
        navManager.NavigateTo("/User/Create/Reports", forceLoad: true);
    }

    protected async override Task OnInitializedAsync()
    {
        await GetUserReports();
        await base.OnInitializedAsync();
    }
    private async Task GetUserReports(string UserId = "9zeirWQJnldZ2qizLbalnxjxpQh2")
    {
        reportDtos = await reportService.GetAllReportsByUserId(UserId, pagination);
        isDataLoaded = true;
    }
}
